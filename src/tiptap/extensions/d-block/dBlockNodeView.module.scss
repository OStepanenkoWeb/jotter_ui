@use "../../../styles/abstracts/colors" as *;

.dblock {
  display: flex;

  p,
  h1,
  h2,
  h3 {
    text-align: start;
    margin: 5px 0;
  }

  a {
    cursor: pointer;
    color: $primary;
  }

  code {
    background-color: rgba(#616161, 0.1);
    border-radius: 0.25em;
    box-decoration-break: clone;
    color: #616161;
    font-size: 0.9rem;
    padding: 0.25em;
  }

  .wrapper_section {
    display: flex;
    padding-top: 8px;
    align-items: flex-start;
    visibility: hidden;

    .icon {
      display: flex;
      align-items: center;
      padding: 0 2px;
      cursor: pointer;

      &:last-child {
        cursor: grab;
      }
    }
  }

  table {
    position: relative;
    border-collapse: collapse;
    table-layout: fixed;
    width: 100%;
    margin: 0;
    overflow-x: auto;

    td,
    th {
      min-width: 15em;
      border: 2px solid #ced4da;
      padding: 3px 5px;
      vertical-align: top;
      box-sizing: border-box;
      position: relative;
    }

    tr div {
      width: 100%;
    }

    th {
      font-weight: bold;
      text-align: left;
      background-color: #f1f3f5;
    }
  }

  blockquote {
    border-left: 3px solid rgba(13, 13, 13, 0.1);
    padding-left: 1rem;
  }

  ul[data-type="taskList"] {
    list-style: none;
    padding: 0;
  }

  ul[data-type="taskList"] p {
    margin: 0;
  }

  ul[data-type="taskList"] li {
    display: flex;
  }

  ul[data-type="taskList"] li > label {
    flex: 0 0 auto;
    margin-right: 0.5rem;
    user-select: none;
  }

  ul[data-type="taskList"] li > div {
    flex: 1 1 auto;
  }

  .ProseMirror {
    p.is-empty::before {
      color: #adb5bd;
      content: attr(data-placeholder);
      float: left;
      height: 0;
      pointer-events: none;
    }
  }

  &:hover .wrapper_section {
    visibility: visible;
  }
}
